import base64
from openai import OpenAI
from config import OPENAI_API_KEY
from typing import List, Optional

client = OpenAI(api_key=OPENAI_API_KEY)


def analyze_xauusd_screenshots(image_paths: List[str]) -> Optional[str]:
    system_prompt = """–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–π–¥–µ—Ä. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥—Ä–∞—Ñ–∏–∫–∏ XAUUSD (15M –∏ 1H) –ø–æ:

    1. –¢—Ä–µ–Ω–¥ (‚ñ≤‚ñº‚ûñ) + MA50
    2. –£—Ä–æ–≤–Ω–∏ S/R (2+ —Ç–µ—Å—Ç–∞)
    3. –¢–æ—á–∫–∏ –≤—Ö–æ–¥–∞ (–æ—Ç—Å–∫–æ–∫–∏)

    –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
    üìä XAUUSD Analysis
    ‚úÖ Signal: [Long/Short/None]
    üéØ Entry: $XXXX.XX
    üõ° SL: $XXXX.XX
    üí∞ TP: $XXXX.XX
    üìå Confirmation: [–£—Ä–æ–≤–µ–Ω—å/–ü–∞—Ç—Ç–µ—Ä–Ω]
    
    –Ω–µ –æ—Ç–≤–µ—á–∞–π –æ–±—ä–µ–º–Ω–æ. –ª—É—á—à–µ —á–µ—Ç–∫–æ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ
    """


    try:
        encoded_images = []
        for path in image_paths:
            with open(path, "rb") as img_file:
                encoded_images.append(
                    f"data:image/jpeg;base64,{base64.b64encode(img_file.read()).decode('utf-8')}"
                )

        response = client.chat.completions.create(
            model="gpt-4-turbo",
            messages=[
                {
                    "role": "system",
                    "content": system_prompt
                },
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥—Ä–∞—Ñ–∏–∫–∏:"},
                        *[{"type": "image_url", "image_url": {"url": img}} for img in encoded_images]
                    ]
                }
            ],
            max_tokens=500,
            temperature=0.1
        )
        return response.choices[0].message.content

    except Exception as e:
        return f"‚ùå Error: {str(e)}"
